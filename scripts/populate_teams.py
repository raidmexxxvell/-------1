#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ë–î –¥–∞–Ω–Ω—ã–º–∏ –æ –∫–æ–º–∞–Ω–¥–∞—Ö Liga Obninska
"""

import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PYTHONPATH
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from app import app
from config import SessionLocal
from database.database_models import Team


import re

def parse_team_name(filename):
    # –£–¥–∞–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ, –∑–∞–º–µ–Ω—è–µ–º –¥–µ—Ñ–∏—Å—ã/–ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–±–µ–ª—ã, –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä
    name = os.path.splitext(filename)[0]
    name = re.sub(r'[-_]', ' ', name)
    name = name.strip()
    # –ü–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –∑–∞–≥–ª–∞–≤–Ω–∞—è (—Å —É—á–µ—Ç–æ–º –∫–∏—Ä–∏–ª–ª–∏—Ü—ã)
    name = name.title()
    return name

def get_teams_from_logos():
    logos_dir = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'static', 'img', 'team-logos')
    files = [f for f in os.listdir(logos_dir) if os.path.isfile(os.path.join(logos_dir, f)) and f.lower().endswith(('.png', '.jpg', '.jpeg', '.svg'))]
    teams = []
    for f in files:
        name = parse_team_name(f)
        logo_url = f'/static/img/team-logos/{f}'
        teams.append({
            'name': name,
            'city': '–û–±–Ω–∏–Ω—Å–∫',
            'logo_url': logo_url
        })
    return teams


def populate_teams():
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É teams –ø–æ —Ñ–∞–π–ª–∞–º –ª–æ–≥–æ—Ç–∏–ø–æ–≤."""
    if SessionLocal is None:
        print("‚ùå Database not configured")
        return False
    with app.app_context():
        db = SessionLocal()
        try:
            print("üèüÔ∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫–æ–º–∞–Ω–¥ –ø–æ –ª–æ–≥–æ—Ç–∏–ø–∞–º...")
            teams_data = get_teams_from_logos()
            if not teams_data:
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –ª–æ–≥–æ—Ç–∏–ø–∞ –∫–æ–º–∞–Ω–¥ –≤ static/img/team-logos/")
                return False
            existing_count = db.query(Team).count()
            if existing_count > 0:
                print(f"‚ö†Ô∏è –í –ë–î —É–∂–µ –µ—Å—Ç—å {existing_count} –∫–æ–º–∞–Ω–¥")
                response = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –±—É–¥—É—Ç –æ–±–Ω–æ–≤–ª–µ–Ω—ã (y/N): ")
                if response.lower() != 'y':
                    print("–û—Ç–º–µ–Ω–∞")
                    return True
            for team_data in teams_data:
                existing_team = db.query(Team).filter(Team.name == team_data['name']).first()
                if existing_team:
                    print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: {team_data['name']}")
                    existing_team.city = team_data['city']
                    existing_team.logo_url = team_data['logo_url']
                    existing_team.is_active = True
                else:
                    print(f"‚ûï –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: {team_data['name']}")
                    new_team = Team(
                        name=team_data['name'],
                        city=team_data['city'],
                        logo_url=team_data['logo_url'],
                        is_active=True
                    )
                    db.add(new_team)
            db.commit()
            total_teams = db.query(Team).filter(Team.is_active == True).count()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ! –í –ë–î {total_teams} –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–∞–Ω–¥")
            teams = db.query(Team).filter(Team.is_active == True).order_by(Team.name).all()
            print("\nüìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –≤ –ë–î:")
            for i, team in enumerate(teams, 1):
                print(f"{i:2d}. {team.name} ({team.city})")
            return True
        except Exception as e:
            db.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")
            return False
        finally:
            db.close()

if __name__ == '__main__':
    print("=" * 50)
    print("üèÜ Liga Obninska - –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥")
    print("=" * 50)
    
    success = populate_teams()
    
    print("\n" + "=" * 50)
    if success:
        print("‚úÖ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø–µ—Ä–µ–π—Ç–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–æ–º–∞–Ω–¥–∞–º–∏")
        print("üåê –û—Ç–∫—Ä–æ–π—Ç–µ /admin –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É '–ö–æ–º–∞–Ω–¥—ã'")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥")
    print("=" * 50)